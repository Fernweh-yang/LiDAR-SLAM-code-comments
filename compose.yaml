x-common-volumes: &common-volumes
  volumes:
    - .:/projects
    - data_headquarters:/projects/datasets

x-ubuntu-devices: &ubuntu-devices
  devices:
    - /dev/dri:/dev/dri

x-ubuntu-envs: &ubuntu-envs
  environment:
    - UID=${UID:-1000}
    # - DISPLAY=unix$DISPLAY
    - DISPLAY=$DISPLAY
    - QT_X11_NO_MITSHM=1
    - NVIDIA_VISIBLE_DEVICES=all
    - NVIDIA_DRIVER_CAPABILITIES=all
    #      - NVIDIA_REQUIRE_CUDA=cuda>=9.0
    - XAUTHORITY=/tmp/.docker.xauth

services:
  slam-learning-env-ubuntu:
    image: slam-learning-env:ubuntu
    container_name: slam-learning-env-ubuntu
    runtime: nvidia
    network_mode: "host"
    tty: true
    working_dir: /projects
    build:
      context: .
      dockerfile: docker/Dockerfile.ubuntu
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
        - BASE_IMAGE=osrf/ros:noetic-desktop-full
    <<: [*common-volumes, *ubuntu-devices, *ubuntu-envs]

  slam-learning-env-mac:
    image: slam-learning-env:mac
    container_name: slam-learning-env-mac
    tty: true
    working_dir: /projects
    build:
      context: .
      dockerfile: docker/Dockerfile.mac
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
        - BASE_IMAGE=osrf/ros:noetic-desktop-full
    environment:
      - UID=${UID:-1000}
      - QT_X11_NO_MITSHM=1
      - XAUTHORITY=/tmp/.docker.xauth
    <<: [*common-volumes]

volumes:
  data_headquarters:
    name: data_headquarters
    external: true